<link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
<link rel="icon" href="favicon.ico" type="image/x-icon">
<html>

        <script src="MusicEngine.js"></script>
        <script src="gl-matrix.js"></script>
<script src="GraphicsEngine.js"></script>

  <head>

  </head>
  <body>
    <script>
  var beatarray;
  var notesarray;
  var tempo;
  var timez;


    function viewPoly()
    {
      for (var i = 0; i < PolyUnits.length; i++) {
        console.log(PolyUnits[i].rhythm + " - " + PolyUnits[i].notes);
      }
    }
    function applyupdate()
    {

      beatarray = document.getElementById("keykey").value;
      notesarray = [];
      tempo = document.getElementById("tempochange").value;
      type = "sine";
      PolyUnits.push(new PolyUnit(beatarray,notesarray,tempo,type));

      for (var i = 0; i < PolyUnits.length; i++) {
        console.log(PolyUnits[i].rhythm + " - " + PolyUnits[i].notes);
      }

    }
    function updateKey()
    {
      currentkey = document.getElementById("key").value;
      return currentkey;
    }
    function updateTempo()
    {
      currenttempo = document.getElementById("tempochange").value;
      return currenttempo;
    }
    function updateScale()
    {
      currentscale = document.getElementById("scaleselect").value;
      if (currentscale == WholeTone)
      {
        intervalstack =4;
      }
      else
      {
        intervalstack=3;
      }
      return currentscale;
    }
  </script>
<input type="text" name="fps" value="0" id ="fps">
<input type="text" name="vcount" value="0" id ="vcount">
<br>
<canvas id="glCanvas" width="900" height="700">
  Browser Unsupported
</canvas>
<br>

<script>
function updateGraphicsSettings()
{
  document.getElementById("fps").value = fps;
  totalFrames = 0;
  startTime = performance.now();
  DRAW_MODE = document.getElementById("drawmode").value;

  //SHAPE_VERTEX = document.getElementById("drawnum").value;
  EMIT_RATE = document.getElementById("particlenum").value;
  AUTO_ROTATE = document.getElementById("rotatematrix").value.split(',').map(Number);
  EMIT_COLOR = document.getElementById("emitcolor").value.split(',').map(Number);
  PARTICLE_LIFE = document.getElementById("particlelife").value;
  GRAVITY_STRENGTH = parseFloat(document.getElementById("grav").value);
  VELOCITY_VARIANCE = document.getElementById("velvar").value;
  switch(DRAW_MODE) {
    case "gl.LINES":
        SHAPE_VERTEX = 2
        break;
    case "gl.TRIANGLES":
        SHAPE_VERTEX = 3
        break;
    case "gl.POINTS":
        SHAPE_VERTEX = 1
        break;
    case "gl.LINE_STRIP":
        SHAPE_VERTEX = 2
        break;
    case "gl.QUADs":
        SHAPE_VERTEX = 4
        break;
  }

}

function autoMutate(times)
{
    pol1 = Math.random() < 0.5 ? -1 : 1;
    pol2 = Math.random() < 0.5 ? -1 : 1;
    pol3 = Math.random() < 0.45 ? 1 : 0;
    pol4 = Math.random() < 0.5 ? 1 : 0;
    pol5 = Math.random() < 0.3 ? 1 : 0;
  var mutseed = getRndInteger(1,times*4);
  //console.log("times" + times);
  if (mutseed>times*1.5) 
  {
    if (pol5)
    {

    currtempo = parseFloat(document.getElementById('tempochange').value);
    //console.log(currtempo);
    tempodiff = getRndInteger(5,15);

    newtempo = parseFloat(currtempo) + (pol1 * parseFloat(tempodiff));
    //console.log(newtempo);
    changeTempo(newtempo, PolyUnits);
    (document.getElementById('tempochange').value) = (newtempo);

    console.log("Tempo Changed: " + (pol1*tempodiff));

    }
    if (pol3)
    {

    document.getElementById('key').value = 
    key_transpose(document.getElementById('key').value,pol2*7);
    console.log("Key changed")
    }
    else
    {
      shufflenum= getRndInteger(1,PolyUnits.length);
      targets = []
      for (var i = 0; i < shufflenum; i++)
      {
        target = getRndInteger(0,PolyUnits.length);
        shufflePoly(target,target+1);
        targets.push(target);
      }
        console.log(i+": Polyrhythms changed:" + targets);

    }

    if (pol4)
    {
      if (pol3 == 0)
      {
        if (PolyUnits.length>2){PolyUnits.pop()};
        console.log("Last poly removed");
      }

      else if (PolyUnits.length <= 5){

       PolyUnits.push(new PolyUnit(shuffleonePoly(),["C4"],90,Math.random() >0.5 ?'sine':'triangle'));
       console.log("New Poly Added")
      }
      
    }


    return 3;
  }
  else
  {
  return times+1;
  }
}



</script>
    
    <button onclick="if(!isPlaying){isPlaying = 1;changeTempo(updateTempo(),PolyUnits);updateGraphicsSettings();EventLoop(document.getElementById('key').value,context.currentTime,document.getElementById('scaleselect').value);barcount=0;}">Start Generation</button>
  <button onclick="isPlaying = 0;">Stop Generation</button>
  <button onclick="shufflePoly(0,PolyUnits.length);viewPoly();">Shuffle Polyrhythms</button>
   <!-- <button onclick="updateGraphicsSettings()">Apply Particles</button> -->
   <button onclick="PolyUnits.push(new PolyUnit(shuffleonePoly(),[],90,Math.random() >0.5 ?'sine':'triangle'));console.log('-');viewPoly();">Push Random Layer</button>
  <button onclick="if (PolyUnits.length>1){PolyUnits.pop();}">Remove Last Layer</button>
  <input type="checkbox" id="automutate" checked=True> Auto<br>

  <button onclick="PolyUnits = [];applyupdate();">Clear Array</button>

  <button onclick="viewPoly()">View Polyrhythms</button>

  <!-- <button onclick="notesarray=createRandomChord(3,MajorScale,document.getElementById('key').value);beatarray=fillpolyrhythm(notesarray.length);PRChord(notesarray,beatarray,60,context.currentTime+0.2,'triangle',1)">Random Chords</button> -->

<select id="scaleselect">
  <option value="TSTTSTT">MinorScale</option>
  <option value="TTSTTTS">MajorScale</option>
  <option value="TTTTTTT">WholeTone</option>
  <option value="TSTSTSTS">Octatonic1</option>
  <option value="STSTSTST">Octatonic2</option>
  <option value="TTSTSSTS">MajorFlat6</option>

</select>

<table style="width:60%">
  <tr>
  <th>
  <p>Rhythm cell Input</p>
  <input type="text" name="beat" value="Ioioioio" id ="keykey">
  <br>
  <button onclick="applyupdate();">Push Notes</button>

  
</th>
<th>
  <p>tempo</p> 
  <div class="slidecontainer">
  <input type="range" min=60 max=150 value=70 class="slider" id="tempochange">
</div>
  <input type="text" name="key" value="D" id ="key">
  <button onclick="document.getElementById('key').value = key_transpose(document.getElementById('key').value,7)">UpFifth</button>
  <button onclick="document.getElementById('key').value = key_transpose(document.getElementById('key').value,-7)">DownFifth</button>
</th>

  <br>
</tr>
</table>
  <br>
    Number of Emitters
    <input type="number" name="emitters" value=1 id ="particlenum">
    <br>
    Draw Mode


  <select id="drawmode">
    <option value="gl.LINE_STRIP">Lines Connect</option>
    <option value="gl.TRIANGLES">Triangle</option>
    <option value="gl.LINES">Lines</option>
    <option value="gl.POINTS">Points</option>

  </select>

  <br>
  time to live
  <input type="number" name="ttl" value=550 id ="particlelife">
130 default
<br>

  Gravity Strength
  <input type="text" name="gravity" value="0.00008" id ="grav">
0.00190 default
<br>
  Emitter Velocity Variance
  <input type="number" name="variance" value=0.7 id ="velvar">
0.015 default
    <br>
    Rotation Matrix
    <input type="text" name="rotation" value="0.1,0.6,0.3" id ="rotatematrix">
    <br>
    Emit Color
    <input type="text" name="colormatrix" value="0.0,0.01,0.0" id ="emitcolor">
   
  <br>
<script type="text/javascript">InitDemo();</script>


  </body>
</html>
